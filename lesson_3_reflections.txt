When would you want to use a remote repository rather than keeping all 
your work local?

I'd be nice to access my work from no matter where I am and storing 
information on a server while
in this case not privately it does solve the issue of sharing information 
and accessibility.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

Autmomatically staying up-to-date could result in changing parts of code 
that I didn't want public of getting code that is in another branch that 
someone else may be working on. 

Describe the differences between forks, clones, and branches.  When would 
you use one instead of another?

A fork is a like a clone that only occurs on GitHub. A fork is used when 
trying to copy information from someone elses GitHub to my own. A clone 
will copy a git repository regardless of where it resides and should be 
used when you need to copy a repository. A branch is a part of a 
repository and should be used when experimenting on features that you 
don't want to interfere with the master.

What is the benefit of having a copy of the last known state of the remote
stored locally?

I can work on that last commit and whenever I need to get back up to date 
I can just pull and/or push to/from the server.  Also local can give you 
so much more speed when conducting a diff or other functions.

How would you collaborate without using Git or GitHub?  What would be 
easier, and what would be harder?

Collaborating without Git or GitHub wouldn't allow for quick changes to 
be viewed and there would be someone who's sole responsibility would be 
to track changes. But if we are working far apart or not on the same 
schedule it makes changes difficult to manage and whenever a working 
version came out everyone would have to make sure they were using the 
mose up-to-date version.  Learning Git/GitHub and Privacy are important 
barriers to projects.  You have to pay for privacy on GitHub and I've 
just spent a long time learning how to use Git.

When would you want to make changes in a separate branch rather than 
directly in master?  What benefits does each approach have?

I would think that making changes on a separate branch allows you to
experiment on new tools and features that are going to be added. I'd
probably make a branch whenever I'm thinking of making abig change to
code that could take a longer amount of time. So, I don't want to have
broken versions in my master branch. That way I can be working and not 
have to worry about making changes to the working code along the way.


